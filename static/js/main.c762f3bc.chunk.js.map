{"version":3,"sources":["logo.svg","data.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","smsd_dbs_T4","latency","throughput","bs","util","dp_throughput_bs2","platform","P4","T4","same_device_diff_gpu","gpu","dp_util_T4","TensorFlow","TensorRT","TorchScript","ONNX","dataSource","key","portal","demo1","demo2","columns","title","dataIndex","render","e","alt","src","String","width","App","className","logo","align","style","marginTop","fontSize","href","orientation","display","height","data","DataClass","margin","top","right","left","bottom","verticalAlign","stroke","strokeDasharray","dataKey","offset","value","position","textAnchor","yAxisId","type","domain","angle","barSize","fill","strokeWidth","textAlign","justifyContent","Boolean","window","location","hostname","match","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.c762f3bc.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.73d27ac1.svg\";","export const sample_data = [\n    { genre: \"Sports\", sold: 275, income: 2300 },\n    { genre: \"Strategy\", sold: 115, income: 667 },\n    { genre: \"Action\", sold: 120, income: 982 },\n    { genre: \"Shooter\", sold: 350, income: 5271 },\n    { genre: \"Other\", sold: 150, income: 3710 },\n];\n\nexport const sample_cols = {\n    sold: { alias: \"销售量\" },\n    genre: { alias: \"游戏种类\" },\n};\n\n// Same model same device, different batch size.\n\n// T4\n// latency 95th:  [19.10444498062133, 17.987751960754395, 24.278080463409424, 38.25854063034057, 69.5155143737793, 126.2059211730957, 242.6874041557312, 477.7075886726379]\n// throughput:  [66.39660504285953, 122.10618632689604, 176.616147347364, 223.27035861482935, 243.6001193337727, 269.28261371710175, 274.9067639729919, 279.1917945095303]\n// avg_utils:  [39.2833, 44.5192, 53.5278, 62.1071, 64.0385, 68.1739, 72.3913, 75.2727]\n\nexport const smsd_dbs_T4 = [\n    {\n        latency: 19.10444498062133,\n        throughput: 66.39660504285953,\n        bs: 1,\n        util: 39.2833,\n    },\n    {\n        latency: 17.987751960754395,\n        throughput: 122.10618632689604,\n        bs: 2,\n        util: 44.5192,\n    },\n    {\n        latency: 24.278080463409424,\n        throughput: 176.616147347364,\n        bs: 4,\n        util: 53.5278,\n    },\n    {\n        latency: 38.25854063034057,\n        throughput: 223.27035861482935,\n        bs: 8,\n        util: 62.1071,\n    },\n    {\n        latency: 69.5155143737793,\n        throughput: 243.6001193337727,\n        bs: 16,\n        util: 64.0385,\n    },\n    {\n        latency: 126.2059211730957,\n        throughput: 269.28261371710175,\n        bs: 32,\n        util: 68.1739,\n    },\n    {\n        latency: 242.6874041557312,\n        throughput: 274.9067639729919,\n        bs: 64,\n        util: 72.3913,\n    },\n    {\n        latency: 477.7075886726379,\n        throughput: 279.1917945095303,\n        bs: 128,\n        util: 75.2727,\n    },\n];\n\n// P4\n// latency 95th:  [22.6202368736267, 24.36639070510864, 31.78173303604126, 50.4256248474121, 84.71701145172118, 152.9623508453369, 276.14104747772217, 530.91801404953]\n// throughput:  [50.66973818615972, 88.55822924697829, 133.13008515852403, 169.2225431492324, 200.33322119189702, 223.38863324735894, 240.77713166220317, 248.97144596797813]\n// avg_utils:  [54.7333, 57.4333, 62.0208, 66.6216, 69.871, 72.6786, 75.6538, 76.84]\n\nexport const smsd_dbs_P4 = [\n    {\n        latency: 22.6202368736267,\n        throughput: 50.66973818615972,\n        bs: 1,\n        util: 54.7333,\n    },\n    {\n        latency: 24.36639070510864,\n        throughput: 88.55822924697829,\n        bs: 2,\n        util: 57.4333,\n    },\n    {\n        latency: 31.78173303604126,\n        throughput: 133.13008515852403,\n        bs: 4,\n        util: 62.0208,\n    },\n    {\n        latency: 50.4256248474121,\n        throughput: 169.2225431492324,\n        bs: 8,\n        util: 66.6216,\n    },\n    {\n        latency: 84.71701145172118,\n        throughput: 200.33322119189702,\n        bs: 16,\n        util: 69.871,\n    },\n    {\n        latency: 152.9623508453369,\n        throughput: 223.38863324735894,\n        bs: 32,\n        util: 72.6786,\n    },\n    {\n        latency: 276.14104747772217,\n        throughput: 240.77713166220317,\n        bs: 64,\n        util: 75.6538,\n    },\n    {\n        latency: 530.91801404953,\n        throughput: 248.97144596797813,\n        bs: 128,\n        util: 76.8427,\n    },\n];\n\nexport const smsd_dbs_latency = [\n    {\n        P4: 22.6202368736267,\n        T4: 19.10444498062133,\n    },\n    {\n        P4: 24.36639070510864,\n        T4: 17.987751960754395,\n    },\n    {\n        P4: 31.78173303604126,\n        T4: 24.278080463409424,\n    },\n    {\n        P4: 50.4256248474121,\n        T4: 38.25854063034057,\n    },\n    {\n        P4: 84.71701145172118,\n        T4: 69.5155143737793,\n    },\n    {\n        P4: 152.9623508453369,\n        T4: 126.2059211730957,\n    },\n    {\n        P4: 276.14104747772217,\n        T4: 242.6874041557312,\n    },\n    {\n        P4: 530.91801404953,\n        T4: 477.7075886726379,\n    },\n];\n\n// P4  avg_utils:  [54.7333, 57.4333, 62.0208, 66.6216, 69.871, 72.6786, 75.6538, 76.84]\n// T4  avg_utils:  [39.2833, 44.5192, 53.5278, 62.1071, 64.0385, 68.1739, 72.3913, 75.2727]\n// RTX2080Ti  avg_utils:  [33.1228, 36.8605, 41.4167, 50.1875, 56.5, 60.0, 62.4167, 64.8182]\n// V100  avg_utils:  [31.7333, 34.08, 38.5926, 45.5882, 50.2143, 53.3636, 57.5, 60.2]\n\nexport const smsd_dbs_util = [\n    {\n        bs: 1,\n        P4: 54.7333,\n        T4: 39.2833,\n        RTX2080Ti: 33.1228,\n        V100: 31.7333,\n    },\n    {\n        bs: 2,\n        P4: 57.4333,\n        T4: 44.5192,\n        RTX2080Ti: 36.8605,\n        V100: 34.08,\n    },\n    {\n        bs: 4,\n        P4: 62.0208,\n        T4: 53.5278,\n        RTX2080Ti: 41.4167,\n        V100: 38.5926,\n    },\n    {\n        bs: 8,\n        P4: 66.6216,\n        T4: 62.1071,\n        RTX2080Ti: 50.1875,\n        V100: 45.5882,\n    },\n    {\n        bs: 16,\n        P4: 69.871,\n        T4: 64.0385,\n        RTX2080Ti: 56.5,\n        V100: 50.2143,\n    },\n    {\n        bs: 32,\n        P4: 72.6786,\n        T4: 68.1739,\n        RTX2080Ti: 60.0,\n        V100: 53.3636,\n    },\n    {\n        bs: 64,\n        P4: 75.6538,\n        T4: 72.3913,\n        RTX2080Ti: 62.4167,\n        V100: 57.5,\n    },\n    {\n        bs: 128,\n        P4: 76.84,\n        T4: 75.2727,\n        RTX2080Ti: 64.8182,\n        V100: 60.2,\n    },\n];\n\nexport const smsd_dbs_throughput = [\n    {\n        P4: 50.66973818615972,\n        T4: 66.39660504285953,\n    },\n    {\n        P4: 88.55822924697829,\n        T4: 122.10618632689604,\n    },\n    {\n        P4: 133.13008515852403,\n        T4: 176.616147347364,\n    },\n    {\n        P4: 169.2225431492324,\n        T4: 223.27035861482935,\n    },\n    {\n        P4: 200.33322119189702,\n        T4: 243.6001193337727,\n    },\n    {\n        P4: 223.38863324735894,\n        T4: 269.28261371710175,\n    },\n    {\n        P4: 240.77713166220317,\n        T4: 274.9067639729919,\n    },\n    {\n        P4: 248.97144596797813,\n        T4: 279.1917945095303,\n    },\n];\n\n// P4  all_batch_throughput:  [88.55822924697829, 102.20803865591428, 56.720457717415876, 85.24703181349611]\n// T4  all_batch_throughput:  [122.10618632689604, 150.26316370754694, 58.20733298176469, 99.8868079190161]\n\n// T4  latencies_95th [17.987751960754395, 16.987788677215576, 40.16159772872924, 23.040485382080078]\n// P4  latencies_95th [24.36639070510864, 20.343661308288574, 39.256298542022705, 26.20035409927368]\n\nexport const dp_throughput_bs2 = [\n    {\n        platform: \"TensorFlow\",\n        P4: 88.55822924697829,\n        T4: 122.10618632689604,\n    },\n    {\n        platform: \"TensorRT\",\n        P4: 102.20803865591428,\n        T4: 150.26316370754694,\n    },\n    {\n        platform: \"TorchScript\",\n        P4: 56.720457717415876,\n        T4: 58.20733298176469,\n    },\n    {\n        platform: \"ONNX\",\n        P4: 85.24703181349611,\n        T4: 99.8868079190161,\n    },\n];\n\n// batch size: 16\n// throughput: [453.16052573453123, 200.33322119189702, 243.6001193337727, 438.4617500493123]\n// latency: [36.53959035873414, 84.71701145172118, 69.5155143737793, 38.34927082061767]\n\nexport const same_device_diff_gpu = [\n    {\n        gpu: \"RTX2080Ti\",\n        throughput: 453.16052573453123,\n        latency: 36.53959035873414,\n    },\n    {\n        gpu: \"P4\",\n        throughput: 200.33322119189702,\n        latency: 84.71701145172118,\n    },\n    {\n        gpu: \"T4\",\n        throughput: 243.6001193337727,\n        latency: 69.5155143737793,\n    },\n    {\n        gpu: \"V100\",\n        throughput: 438.4617500493123,\n        latency: 38.34927082061767,\n    },\n];\n\n// T4  avg_utils:\n//                 [  , , ],\n//                 [ , , ],\n//                 [ , , ],\n//                 [ , , ]\n\nexport const dp_util_T4 = [\n    {\n        bs: 1,\n        TensorFlow: 39.2833,\n        TensorRT: 46.9149,\n        TorchScript: 5.0,\n        ONNX: 4.0,\n    },\n    {\n        bs: 2,\n        TensorFlow: 44.5192,\n        TensorRT: 50.3333,\n        TorchScript: 13.6667,\n        ONNX: 10.0,\n    },\n    {\n        bs: 4,\n        TensorFlow: 53.5278,\n        TensorRT: 47.8148,\n        TorchScript: 25.0,\n        ONNX: 22.3333,\n    },\n    {\n        bs: 8,\n        TensorFlow: 62.1071,\n        TensorRT: 45.7143,\n        TorchScript: 21.0,\n        ONNX: 20.4286,\n    },\n    {\n        bs: 16,\n        TensorFlow: 64.0385,\n        TensorRT: 46.1304,\n        TorchScript: 17.9231,\n        ONNX: 19.0,\n    },\n    {\n        bs: 32,\n        TensorFlow: 68.1739,\n        TensorRT: 44.3846,\n        TorchScript: 22.4091,\n        ONNX: 24.3636,\n    },\n    {\n        bs: 64,\n        TensorFlow: 72.3913,\n        TensorRT: 49.5,\n        TorchScript: 27.7179,\n        ONNX: 28.2927,\n    },\n];\n","import React from 'react';\nimport Zmage from 'react-zmage';\nimport logo from './logo.svg';\nimport './App.css';\nimport { Divider, Table } from 'antd';\nimport 'antd/dist/antd.css';\nimport * as DataClass from './data';\nimport {\n  Label,\n  Legend,\n  Line,\n  CartesianGrid,\n  XAxis,\n  YAxis,\n  Tooltip,\n  ComposedChart,\n  Bar,\n} from 'recharts';\n\nconst CHART_WIDTH = 400;\nconst DOUBLE_AX_WIDTH = CHART_WIDTH;\nconst CHART_FONT_SIZE = 15;\nconst IMAGE_WIDTH = '100%';\n\nconst dataSource = [\n  {\n    key: '1',\n    portal: 'https://i.loli.net/2020/06/08/UsaQbLZSgpz2NXY.png',\n    demo1: 'https://i.loli.net/2020/06/08/sMoBZv8DNGnyOWX.png',\n    demo2: 'https://i.loli.net/2020/06/08/7MyCbYSG2wRXzes.png',\n  },\n];\n\nconst columns = [\n  {\n    title: 'MLModelCI Web Portal',\n    dataIndex: 'portal',\n    key: 'portal',\n    render: (e) => (\n      <div>\n        <Zmage alt=\"...\" src={String(e)} width={IMAGE_WIDTH}></Zmage>\n      </div>\n    ),\n  },\n  {\n    title: 'Application Demo (BERT) ',\n    dataIndex: 'demo1',\n    key: 'demo2',\n    render: (e) => (\n      <div>\n        <Zmage alt=\"...\" src={String(e)} width={IMAGE_WIDTH}></Zmage>\n      </div>\n    ),\n  },\n  {\n    title: 'Application Demo (Mask R-CNN)',\n    dataIndex: 'demo2',\n    key: 'demo2',\n    render: (e) => (\n      <div>\n        <Zmage alt=\"...\" src={String(e)} width={IMAGE_WIDTH}></Zmage>\n      </div>\n    ),\n  },\n];\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <img src={logo} width=\"160\" alt=\"...\" />\n      <h1 align=\"center\" style={{ marginTop: '15px', fontSize: 25 }}>\n        MLModelCI: An Automatic Cloud Platform for Efficient MLaaS\n      </h1>\n      <p style={{ marginTop: '-10px' }}>\n        Huaizheng Zhang, Yuanming Li, Yizheng Huang, Yonggang Wen, Jianxiong Yin\n        <sup>+</sup>, Kyle Guan<sup>*</sup>\n      </p>\n      <p style={{ marginTop: '-8px' }}>\n        Nanyang Technological University, Singapore; NVIDIA AI Tech Center\n        <sup>+</sup>; Nokia Bell Labs<sup>*</sup>\n      </p>\n      <p align=\"center\" style={{ marginTop: '15px' }}>\n        <a href=\"https://github.com/cap-ntu/ML-Model-CI\">Code</a> •&nbsp;\n        <a href=\"https://github.com/cap-ntu/ML-Model-CI\">Paper</a> •&nbsp;\n        <a href=\"https://github.com/cap-ntu/ML-Model-CI#tutorial\">Tutorial</a>\n        •&nbsp;\n        <a href=\"https://github.com/cap-ntu/ML-Model-CI\">Slides</a> •&nbsp;\n        <a href=\"https://github.com/cap-ntu/ML-Model-CI\">Citation</a> •&nbsp;\n        <a href=\"https://github.com/cap-ntu/ML-Model-CI\">News</a>\n      </p>\n      <Divider orientation=\"left\">Sample Profiling Results of ResNet50</Divider>\n      <div style={{ display: 'flex' }}></div>\n      <br />\n      <div className=\"showDataClass\">\n        <ComposedChart\n          width={DOUBLE_AX_WIDTH}\n          height={CHART_WIDTH}\n          data={DataClass.smsd_dbs_T4}\n          margin={{\n            top: 5,\n            right: 20,\n            left: 15,\n            bottom: 50,\n          }}\n        >\n          <Legend verticalAlign=\"top\" height={36} />\n          <CartesianGrid stroke=\"#ccc\" strokeDasharray=\"5 5\" />\n          <XAxis dataKey=\"bs\">\n            <Label\n              offset={-23}\n              value=\"Batch Size\"\n              position=\"insideBottom\"\n              style={{ textAnchor: 'middle', fontSize: CHART_FONT_SIZE }}\n            />\n          </XAxis>\n          <YAxis\n            yAxisId=\"latency\"\n            orientation=\"right\"\n            type=\"number\"\n            domain={[0, 550]}\n          >\n            <Label\n              value=\"95th Percentile Latency (ms)\"\n              position=\"insideRight\"\n              angle={-90}\n              style={{ textAnchor: 'middle', fontSize: CHART_FONT_SIZE }}\n            />\n          </YAxis>\n          <YAxis\n            yAxisId=\"throughput\"\n            orientation=\"left\"\n            type=\"number\"\n            domain={[0, 320]}\n          >\n            <Label\n              value=\"Throughput on Tesla T4 (req/sec)\"\n              position=\"insideLeft\"\n              angle={-90}\n              style={{ textAnchor: 'middle', fontSize: CHART_FONT_SIZE }}\n            />\n          </YAxis>\n          <Tooltip />\n          <Bar\n            dataKey=\"throughput\"\n            barSize={25}\n            fill=\"#4169E1\"\n            yAxisId=\"throughput\"\n          />\n          <Line\n            strokeWidth={2}\n            type=\"monotone\"\n            dataKey=\"latency\"\n            stroke=\"#ff7300\"\n            yAxisId=\"latency\"\n          />\n        </ComposedChart>\n        <ComposedChart\n          width={DOUBLE_AX_WIDTH}\n          height={CHART_WIDTH}\n          data={DataClass.same_device_diff_gpu}\n          margin={{\n            top: 5,\n            right: 20,\n            left: 15,\n            bottom: 50,\n          }}\n        >\n          <Legend verticalAlign=\"top\" height={36} />\n          <CartesianGrid stroke=\"#ccc\" strokeDasharray=\"5 5\" />\n          <XAxis dataKey=\"gpu\">\n            <Label\n              offset={-23}\n              value=\"Serving Device\"\n              position=\"insideBottom\"\n              style={{ textAnchor: 'middle', fontSize: CHART_FONT_SIZE }}\n            />\n          </XAxis>\n          <YAxis\n            yAxisId=\"latency\"\n            orientation=\"right\"\n            type=\"number\"\n            domain={[0, 100]}\n          >\n            <Label\n              value=\"95th Percentile Latency (ms)\"\n              position=\"insideRight\"\n              angle={-90}\n              style={{ textAnchor: 'middle', fontSize: CHART_FONT_SIZE }}\n            />\n          </YAxis>\n          <YAxis\n            yAxisId=\"throughput\"\n            orientation=\"left\"\n            type=\"number\"\n            domain={[0, 600]}\n          >\n            <Label\n              value=\"Throughput for Batch Size 16 (req/sec)\"\n              position=\"insideLeft\"\n              angle={-90}\n              style={{ textAnchor: 'middle', fontSize: CHART_FONT_SIZE }}\n            />\n          </YAxis>\n          <Tooltip />\n          <Bar\n            dataKey=\"throughput\"\n            barSize={25}\n            fill=\"#20B2AA\"\n            yAxisId=\"throughput\"\n          />\n          <Bar\n            dataKey=\"latency\"\n            barSize={25}\n            fill=\"#EEAD0E\"\n            yAxisId=\"latency\"\n          />\n        </ComposedChart>\n      </div>\n      <div className=\"showDataClass\">\n        <ComposedChart\n          width={CHART_WIDTH}\n          height={CHART_WIDTH}\n          data={DataClass.dp_throughput_bs2}\n          margin={{\n            top: 5,\n            right: 15,\n            left: 15,\n            bottom: 50,\n          }}\n        >\n          <Legend verticalAlign=\"top\" height={36} />\n          <CartesianGrid stroke=\"#ccc\" strokeDasharray=\"5 5\" />\n          <XAxis dataKey=\"platform\">\n            <Label\n              offset={-23}\n              value=\"Serving Platform\"\n              position=\"insideBottom\"\n              style={{ textAnchor: 'middle', fontSize: CHART_FONT_SIZE }}\n            />\n          </XAxis>\n          <YAxis orientation=\"left\" type=\"number\" domain={[0, 220]}>\n            <Label\n              value=\"Throughput (req/sec)\"\n              position=\"insideLeft\"\n              angle={-90}\n              style={{ textAnchor: 'middle', fontSize: CHART_FONT_SIZE }}\n            />\n          </YAxis>\n          <Tooltip />\n          <Bar dataKey=\"T4\" barSize={25} fill=\"#4169E1\" />\n          <Bar dataKey=\"P4\" barSize={25} fill=\"#3CB371\" />\n        </ComposedChart>\n        <ComposedChart\n          width={CHART_WIDTH}\n          height={CHART_WIDTH}\n          data={DataClass.dp_util_T4}\n          margin={{\n            top: 5,\n            right: 15,\n            left: 15,\n            bottom: 50,\n          }}\n        >\n          <Legend verticalAlign=\"top\" height={36} />\n          <Line\n            type=\"monotone\"\n            dataKey=\"TensorFlow\"\n            stroke=\"#ff7300\"\n            strokeWidth={1.5}\n          />\n          <Line\n            type=\"monotone\"\n            dataKey=\"TorchScript\"\n            stroke=\"#3CB371\"\n            strokeWidth={1.5}\n          />\n          <Line\n            type=\"monotone\"\n            dataKey=\"TensorRT\"\n            stroke=\"#CD1076\"\n            strokeWidth={1.5}\n          />\n          <Line\n            type=\"monotone\"\n            dataKey=\"ONNX\"\n            stroke=\"#FFD700\"\n            strokeWidth={1.5}\n          />\n          <CartesianGrid stroke=\"#ccc\" strokeDasharray=\"5 5\" />\n          <XAxis dataKey=\"bs\">\n            <Label\n              offset={-23}\n              value=\"Batch Size\"\n              position=\"insideBottom\"\n              style={{ textAnchor: 'middle', fontSize: CHART_FONT_SIZE }}\n            />\n          </XAxis>\n          <YAxis type=\"number\" domain={[0, 100]}>\n            <Label\n              value=\"Average GPU Utilization (%)\"\n              position=\"insideLeft\"\n              angle={-90}\n              style={{ textAnchor: 'middle', fontSize: CHART_FONT_SIZE }}\n            />\n          </YAxis>\n          <Tooltip />\n        </ComposedChart>\n      </div>\n      <Divider orientation=\"left\">Click to Check the Large Image</Divider>\n      <div\n        style={{\n          width: '100%',\n          textAlign: 'center',\n          display: 'flex',\n          justifyContent: 'center',\n        }}\n      >\n        <Table\n          style={{ width: '95%' }}\n          dataSource={dataSource}\n          columns={columns}\n        />\n      </div>\n      <br />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}